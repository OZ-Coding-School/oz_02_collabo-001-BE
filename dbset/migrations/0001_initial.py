# Generated by Django 5.0.6 on 2024-05-22 23:29

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MET_KEYWORD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('met_keyword_id', models.IntegerField()),
                ('keyword_list', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='MET_REQUEST',
            fields=[
                ('met_request_id', models.AutoField(primary_key=True, serialize=False)),
                ('re_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('re_category', models.CharField(max_length=10)),
                ('re_title', models.CharField(max_length=255)),
                ('re_meetbrief', models.CharField(max_length=255)),
                ('re_content', models.TextField(null=True)),
                ('re_supplies', models.CharField(max_length=255, null=True)),
                ('preparation_materials', models.TextField(null=True)),
                ('proc_title', models.CharField(max_length=255, null=True)),
                ('proc_time', models.CharField(max_length=255, null=True)),
                ('proc_content', models.CharField(max_length=255, null=True)),
                ('insta_url', models.TextField(null=True)),
                ('youtub_url', models.TextField(null=True)),
                ('et_url', models.TextField(null=True)),
                ('regular_activity', models.CharField(max_length=10, null=True)),
                ('date_of_meeting', models.TextField(null=True)),
                ('online_offline', models.CharField(max_length=10, null=True)),
                ('business_area', models.CharField(max_length=50, null=True)),
                ('mbr_age', models.CharField(max_length=10, null=True)),
                ('mbr_num', models.CharField(max_length=10, null=True)),
                ('mbr_content', models.TextField(null=True)),
                ('sel_method', models.CharField(max_length=50, null=True)),
                ('re_challenge', models.CharField(max_length=10, null=True)),
                ('participation_check', models.CharField(max_length=10, null=True)),
                ('participation_fee', models.CharField(max_length=50, null=True)),
                ('re_bank', models.CharField(max_length=50, null=True)),
                ('deposit_account', models.CharField(max_length=100, null=True)),
                ('refund_content', models.TextField(null=True)),
                ('end_of_positing', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MEMBER',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('member_id', models.AutoField(primary_key=True, serialize=False)),
                ('mem_password', models.CharField(max_length=128)),
                ('mem_email', models.CharField(max_length=255)),
                ('mem_name', models.CharField(max_length=255)),
                ('mem_imgUrl', models.TextField()),
                ('mem_address', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('mem_age', models.IntegerField(blank=True, null=True)),
                ('mem_gender', models.CharField(max_length=50)),
                ('mem_job', models.CharField(max_length=255)),
                ('mem_consent', models.IntegerField(null=True)),
                ('mem_marketing', models.IntegerField(null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MET_ROLE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mem_role_id', models.IntegerField()),
                ('ro_rloe', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('meeting_name', models.CharField(max_length=100)),
                ('ro_position', models.CharField(max_length=100)),
                ('post_id', models.IntegerField()),
                ('mem_deposit', models.BooleanField()),
                ('mem_category', models.CharField(max_length=255)),
                ('member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MET_COMMENT',
            fields=[
                ('met_comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('co_content', models.TextField()),
                ('display_name', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbset.met_role')),
            ],
        ),
        migrations.CreateModel(
            name='MET_CHALLENGE',
            fields=[
                ('met_challenge_id', models.AutoField(primary_key=True, serialize=False)),
                ('ch_send', models.CharField(max_length=100)),
                ('ch_send_check', models.BooleanField()),
                ('ch_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbset.met_role')),
            ],
        ),
        migrations.CreateModel(
            name='MET_CATEGORY',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('met_category_id', models.IntegerField()),
                ('met_keyword_id', models.IntegerField()),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbset.met_role')),
            ],
        ),
        migrations.CreateModel(
            name='MET_ATTENDANCE',
            fields=[
                ('met_attendance_id', models.AutoField(primary_key=True, serialize=False)),
                ('attendance_check', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbset.met_role')),
            ],
        ),
        migrations.CreateModel(
            name='ALM_MESSAGE',
            fields=[
                ('alm_message_id', models.AutoField(primary_key=True, serialize=False)),
                ('me_eta', models.DateField()),
                ('me_send', models.IntegerField()),
                ('me_message', models.TextField()),
                ('me_category', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbset.met_role')),
            ],
        ),
        migrations.CreateModel(
            name='MET_SURVEY',
            fields=[
                ('met_survey_id', models.AutoField(primary_key=True, serialize=False)),
                ('su_survey', models.TextField()),
                ('su_answer', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('meet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dbset.met_request')),
                ('member_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbset.met_role')),
            ],
        ),
    ]
